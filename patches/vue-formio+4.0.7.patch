diff --git a/node_modules/vue-formio/lib/components/Form.js b/node_modules/vue-formio/lib/components/Form.js
index 8f79c52..06363b6 100644
--- a/node_modules/vue-formio/lib/components/Form.js
+++ b/node_modules/vue-formio/lib/components/Form.js
@@ -1,24 +1,33 @@
 "use strict";
-var __extends = (this && this.__extends) || (function () {
+var __extends = (this && this.__extends) || (function() {
     var extendStatics = Object.setPrototypeOf ||
-        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
-    return function (d, b) {
+        ({ __proto__: [] }
+            instanceof Array && function(d, b) { d.__proto__ = b; }) ||
+        function(d, b) {
+            for (var p in b)
+                if (b.hasOwnProperty(p)) d[p] = b[p];
+        };
+    return function(d, b) {
         extendStatics(d, b);
+
         function __() { this.constructor = d; }
         d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
     };
 })();
-var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
-    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
+var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
+    var c = arguments.length,
+        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
+        d;
     if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
-    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
+    else
+        for (var i = decorators.length - 1; i >= 0; i--)
+            if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
     return c > 3 && r && Object.defineProperty(target, key, r), r;
 };
-var __metadata = (this && this.__metadata) || function (k, v) {
+var __metadata = (this && this.__metadata) || function(k, v) {
     if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
 };
-var __importDefault = (this && this.__importDefault) || function (mod) {
+var __importDefault = (this && this.__importDefault) || function(mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
@@ -29,92 +38,91 @@ var components_1 = __importDefault(require("formiojs/components"));
 var Components_1 = __importDefault(require("formiojs/components/Components"));
 Components_1.default.setComponents(components_1.default);
 var Form_1 = __importDefault(require("formiojs/Form"));
-var Form = /** @class */ (function (_super) {
+var Form = /** @class */ (function(_super) {
     __extends(Form, _super);
+
     function Form() {
         return _super !== null && _super.apply(this, arguments) || this;
     }
-    Form.prototype.srcChange = function (value) {
+    Form.prototype.srcChange = function(value) {
         if (this.formio) {
             this.formio.src = value;
         }
     };
-    Form.prototype.urlChange = function (value) {
+    Form.prototype.urlChange = function(value) {
         if (this.formio) {
             this.formio.url = value;
         }
     };
-    Form.prototype.formChange = function (value) {
+    Form.prototype.formChange = function(value) {
         if (this.formio) {
             this.formio.form = value;
         }
     };
-    Form.prototype.submissionChange = function (value) {
+    Form.prototype.submissionChange = function(value) {
         if (this.formio) {
             this.formio.submission = value;
         }
     };
-    Form.prototype.languageChange = function (value) {
+    Form.prototype.languageChange = function(value) {
         if (this.formio) {
             this.formio.language = value;
         }
     };
-    Form.prototype.mounted = function () {
+    Form.prototype.mounted = function() {
         var _this = this;
         this.initializeForm()
-            .then(function () {
-            _this.setupForm();
-        })
-            .catch(function (err) {
-            console.warn(err);
-        });
+            .then(function() {
+                _this.setupForm();
+            })
+            .catch(function(err) {
+                console.warn(err);
+            });
     };
-    Form.prototype.destroyed = function () {
+    Form.prototype.destroyed = function() {
         if (this.formio) {
             this.formio.destroy(true);
         }
     };
-    Form.prototype.initializeForm = function () {
+    Form.prototype.initializeForm = function() {
         var _this = this;
-        return new Promise(function (resolve, reject) {
+        return new Promise(function(resolve, reject) {
             if (_this.src) {
                 resolve(new Form_1.default(_this.$refs.formio, _this.src, _this.options)
                     .ready
-                    .then(function (formio) {
-                    _this.formio = formio;
-                    _this.formio.src = _this.src;
-                    return formio;
-                })
-                    .catch(function (err) {
-                    /* eslint-disable no-console */
-                    console.error(err);
-                    /* eslint-enable no-console */
-                }));
-            }
-            else if (_this.form) {
+                    .then(function(formio) {
+                        _this.formio = formio;
+                        _this.formio.src = _this.src;
+                        return formio;
+                    })
+                    .catch(function(err) {
+                        /* eslint-disable no-console */
+                        console.error(err);
+                        /* eslint-enable no-console */
+                    }));
+            } else if (_this.form) {
                 resolve(new Form_1.default(_this.$refs.formio, _this.form, _this.options)
                     .ready
-                    .then(function (formio) {
-                    _this.formio = formio;
-                    _this.formio.form = _this.form;
-                    if (_this.url) {
-                        _this.formio.url = _this.url;
-                    }
-                    return formio;
-                })
-                    .catch(function (err) {
-                    /* eslint-disable no-console */
-                    console.error(err);
-                    /* eslint-enable no-console */
-                }));
-            }
-            else {
+                    .then(function(formio) {
+                        _this.formio = formio;
+                        _this.formio.form = _this.form;
+                        if (_this.url) {
+                            _this.formio.url = _this.url;
+                        }
+                        return formio;
+                    })
+                    .catch(function(err) {
+                        /* eslint-disable no-console */
+                        console.error(err);
+                        /* eslint-enable no-console */
+                    }));
+            } else {
                 // If we get to here there is no src or form
                 reject('Must set src or form attribute');
             }
         });
     };
-    Form.prototype.setupForm = function () {
+    Form.prototype.setupForm = function() {
         var _this = this;
         if (!this.formio) {
             return;
@@ -126,14 +134,14 @@ var Form = /** @class */ (function (_super) {
             this.formio.url = this.url;
         }
         this.formio.language = this.language ? this.language : 'en';
-        this.formio.events.onAny(function () {
+        this.formio.events.onAny(function() {
             var args = [];
             for (var _i = 0; _i < arguments.length; _i++) {
                 args[_i] = arguments[_i];
             }
             var eventParts = args[0].split('.');
             // Only handle formio events.
-            var namespace = _this.options.namespace || 'formio';
+            var namespace = _this.hasOwnProperty('options') ? _this.options.namespace : 'formio';
             if (eventParts[0] !== namespace || eventParts.length !== 2) {
                 return;
             }
@@ -147,7 +155,7 @@ var Form = /** @class */ (function (_super) {
             }
         });
     };
-    Form.prototype.render = function (createElement) {
+    Form.prototype.render = function(createElement) {
         return createElement('div', { ref: 'formio' });
     };
     __decorate([
@@ -171,7 +179,7 @@ var Form = /** @class */ (function (_super) {
         __metadata("design:type", String)
     ], Form.prototype, "language", void 0);
     __decorate([
-        vue_property_decorator_1.Prop({ default: function () { } }),
+        vue_property_decorator_1.Prop({ default: function() {} }),
         __metadata("design:type", Object)
     ], Form.prototype, "options", void 0);
     __decorate([
